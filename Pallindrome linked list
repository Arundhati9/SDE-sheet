/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    bool isPalindrome(ListNode* head) {
        
        ListNode* fast=head,*slow=head;
        while(fast->next && fast->next->next)
        {
            slow=slow->next;
            fast=fast->next->next;
        }
        ListNode* curr = slow->next,*prev=NULL,*nex=NULL;
        while(curr!=NULL){
            nex=curr->next;
            curr->next= prev;
            prev=curr;
            curr=nex;
        }
        slow->next=prev;
        ListNode* temp =slow->next;
        slow=slow->next;
        ListNode* dummy = head;
        while(slow!=NULL)
        {
           if(dummy->val!=slow->val)
               return false;
            dummy = dummy->next;
            slow=slow->next;
        }
        return true;
    }
};
